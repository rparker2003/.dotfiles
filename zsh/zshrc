# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"
ZSH_THEME="random"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )
ZSH_THEME_RANDOM_CANDIDATES=("alanpeabody")

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
export ZSH_CUSTOM="$HOME/.dotfiles/zsh"

# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# plugins=(git)
plugins=(
  git
  zsh-autosuggestions
  zsh-syntax-highlighting
  # Add other plugins above this line
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# User specific environment
if [[ ! "$PATH" =~ "$HOME/.local/bin" && ! "$PATH" =~ "$HOME/bin" ]]; then
  PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions
if [[ -d ~/.zshrc.d ]]; then
  for rc in ~/.zshrc.d/*; do
    if [[ -f "$rc" ]]; then
      source "$rc"
    fi
  done
fi
unset rc

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                   # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion

## pyenv configs
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

if command -v pyenv >/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

## bflat python package
export PYTHONPATH="$HOME/gfs/sixty/bflat/python/build/lib.linux-x86_64-cpython-312/:$PYTHONPATH"

## cmake for amps build
export PATH=$HOME/gfs/oss/cmake/2.8.1/bin:$PATH

# Pull down an AMPS release: ARG1 - version/label for release
getamps() {
  local save_dir="$HOME/ampsVersion" # Set the target directory
  mkdir -p "$save_dir"               # Create the directory if it doesn't exist

  for ver in "$@"; do
    ver="${ver//-/_}" # Convert any dashes to underscores

    release_name="AMPS-${ver}-Release-Linux"

    # If "develop" is requested, always replace with a fresh copy
    [[ $ver == 'develop' && -e "$save_dir/${release_name}/bin/ampServer" ]] && rm -rf "$save_dir/${release_name}"

    if [ ! -e "$save_dir/${release_name}/bin/ampServer" ]; then
      wget -P "$save_dir" "http://devnull.crankuptheamps.com/releases/amps/${ver}/${release_name}.tar.gz" &&
        tar --directory="$save_dir" -xvf "$save_dir/${release_name}.tar.gz" &&
        echo "$save_dir/${release_name}.tar.gz" &&
        rm -rf "$save_dir/${release_name}.tar.gz" # Remove the tar.gz file after extraction
    fi
  done
}

getdebug() {
  local save_dir="$HOME/ampsVersion" # Set the target directory
  mkdir -p "$save_dir"               # Create the directory if it doesn't exist

  for ver in "$@"; do
    ver="${ver//-/_}" # Convert any dashes to underscores

    release_name="AMPS-${ver}-Debug-ASAN-Linux"

    # If "develop" is requested, always replace with a fresh copy
    [[ $ver == 'develop' && -e "$save_dir/${release_name}/bin/ampServer" ]] && rm -rf "$save_dir/${release_name}"

    if [ ! -e "$save_dir/${release_name}/bin/ampServer" ]; then
      wget -P "$save_dir" "http://devnull.crankuptheamps.com/releases/amps/${ver}/${release_name}.tar.gz" &&
        tar --directory="$save_dir" -xvf "$save_dir/${release_name}.tar.gz" &&
        rm -rf "$save_dir/${release_name}.tar.gz" # Remove the tar.gz file after extraction
    fi
  done
}
