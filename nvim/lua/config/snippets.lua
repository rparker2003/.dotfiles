-- AMPS Client Code snippets
local snippets = {
amps_config = {
    "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
    "<AMPSConfig>",
    "",
    "  <Name>snippet</Name>",
    "",
    "  <Admin>",
    "    <InetAddr>localhost:8085</InetAddr>",
    "    <FileName>./admin/stats.db</FileName>",
    "    <Interval>1s</Interval>",
    "  </Admin>",
    "",
    "  <Transports>",
    "    <Transport>",
    "      <Name>any-tcp</Name>",
    "      <Type>tcp</Type>",
    "      <InetAddr>9007</InetAddr>",
    "      <Protocol>amps</Protocol>",
    "    </Transport>",
    "",
    "    <!-- galvanometer -->",
    "    <Transport>",
    "      <Name>websocket-any</Name>",
    "      <Protocol>websocket</Protocol>",
    "      <Type>tcp</Type>",
    "      <InetAddr>9008</InetAddr>",
    "    </Transport>",
    "  </Transports>",
    "",
    "  <TransactionLog>",
    "    <JournalDirectory>./journal</JournalDirectory>",
    "    <MinJournalSize>100MB</MinJournalSize>",
    "    <Topic>",
    "      <Name>.*</Name>",
    "      <MessageType>json</MessageType>",
    "    </Topic>",
    "  </TransactionLog>",
    "",
    "  <Logging>",
    "    <Target>",
    "      <Protocol>file</Protocol>",
    "      <FileName>./logs/amps.log</FileName>",
    "      <Level>developer</Level>",
    "      <IncludeErrors>00-0000</IncludeErrors>",
    "    </Target>",
    "  </Logging>",
    "",
    "  <SOW>",
    "    <Topic>",
    "      <Name>sow_topic</Name>",
    "      <MessageType>json</MessageType>",
    "      <FileName>./sow/%n.sow</FileName>",
    "      <Key>/id</Key>",
    "    </Topic>",
    "",
    "    <Topic>",
    "      <Name>action_topic</Name>",
    "      <MessageType>json</MessageType>",
    "      <FileName>./sow/%n.sow</FileName>",
    "      <Key>/id</Key>",
    "    </Topic>",
    "",
    "    <View>",
    "      <Name>example_view</Name>",
    "      <UnderlyingTopic>",
    "        <Join>[sow_topic]./id = [action_topic]./id</Join>",
    "      </UnderlyingTopic>",
    "      <MessageType>json</MessageType>",
    "      <Projection>",
    "        <Field>[sow_topic]./id as /sow_topic_id</Field>",
    "        <Field>[action_topic]./id as /action_topic_id</Field>",
    "      </Projection>",
    "      <Grouping>",
    "        <Field>[sow_topic]./id</Field>",
    "      </Grouping>",
    "    </View>",
    "",
    "    <Queue>",
    "      <Name>example_queue</Name>",
    "      <UnderlyingTopic>sow_topic</UnderlyingTopic>",
    "      <MessageType>json</MessageType>",
    "      <Semantics>at-least-once</Semantics>",
    "    </Queue>",
    "  </SOW>",
    "",
    "  <Actions>",
    "    <Action>",
    "      <On>",
    "        <Module>amps-action-on-publish-message</Module>",
    "        <Options>",
    "          <Topic>sow_topic</Topic>",
    "          <MessageType>json</MessageType>",
    "        </Options>",
    "      </On>",
    "      <Do>",
    "        <Module>amps-action-do-publish-message</Module>",
    "        <Options>",
    "          <Topic>action_topic</Topic>",
    "          <MessageType>json</MessageType>",
    "          <Data>{{AMPS_DATA}}</Data>",
    "        </Options>",
    "      </Do>",
    "    </Action>",
    "  </Actions>",
    "",
    "</AMPSConfig>"
  },
  cpp = {
    "// C++",
    "#include <amps.h>",
    "#include <iostream>",
    "...",
    "int main()",
    "{",
    "  AMPS::Client client(\"my-application\");",
    "  std::string uri = \"tcp://localhost:9007/amps/json\";",
    "  std::string topic = \"sow_topic\";",
    "",
    "  try",
    "  {",
    "    client.connect(uri);",
    "    client.logon();",
    "",
    "    AMPS::Command cmd(\"sow\").setTopic(topic);",
    "",
    "    for (auto msg : client.execute(cmd))",
    "    {",
    "      if (msg.getCommand() == \"sow\")",
    "      {",
    "        std::cout << msg.getData() << std::endl;",
    "      }",
    "    }",
    "  } catch (Exception &e) {",
    "    std::cerr << e.what() << std::endl;",
    "    return -1;",
    "  }",
    "  return 0;",
    "}"
  },
  python = {
    "# Python",
    "from AMPS import *",
    "",
    "client = Client(\"my-application\")",
    "uri = 'tcp://localhost:9007/amps/json'",
    "topic = 'sow_topic'",
    "",
    "try:",
    "    client.connect(uri)",
    "    client.logon()",
    "",
    "    cmd = Command('sow').set_topic(topic)",
    "",
    "    for m in client.execute(cmd):",
    "        if m.get_command() == 'sow':",
    "            print(m.get_data())",
    "",
    "except Exception as e:",
    "    print(e)"
  }
}

return snippets
